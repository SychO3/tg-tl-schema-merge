name: Merge Telegram TL

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 * * * *"   # 每小时一次（UTC）

permissions:
  contents: write   # 关键：创建 release / 推送提交 需要这个

concurrency:
  group: tl-merge
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Run TL fetch & merge
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          python fetch_and_merge_tl.py --outdir schemas

      - name: Detect changes
        id: diff
        run: |
          # 检测工作区是否与 index 不同（脚本写入的文件未 add）
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
          echo "changed=${{ steps.diff.outputs.changed }}"

      - name: Commit changes (if changed)
        if: steps.diff.outputs.changed == 'true'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "chore(tl): hourly update merged.tl [skip ci]"
          git push

      - name: Build checksums (if changed)
        if: steps.diff.outputs.changed == 'true'
        run: |
          cd schemas
          sha256sum merged.tl > merged.tl.sha256
          # 可选：latest.tl 也算
          # sha256sum latest.tl > latest.tl.sha256

      - name: Compose tag & body (if changed)
        if: steps.diff.outputs.changed == 'true'
        id: compose
        run: |
          python - << 'PY'
          import json, datetime, os, sys
          meta = json.load(open("schemas/metadata.json", "r", encoding="utf-8"))
          entries = meta.get("entries", [])
          sha1 = (entries[0]["sha"] if len(entries)>0 else "unknown")[:7]
          sha2 = (entries[1]["sha"] if len(entries)>1 else "unknown")[:7]
          dt_tag = datetime.datetime.utcnow().strftime("%Y%m%d%H%M%S")
          dt_title = datetime.datetime.utcnow().strftime("%Y-%m-%d %H:%M:%S UTC")
          tag = f"tl-{dt_tag}-{sha1}-{sha2}"
          title = f"TL Merge {dt_title}"
          body_lines = []
          body_lines.append("Automated semantic merge of Telegram TL schemas.")
          body_lines.append("")
          body_lines.append("Sources:")
          for e in entries:
              body_lines.append(f"- {e['repo']} @ {e['sha']} ({e['commit_date']})")
          body_lines.append("")
          body_lines.append("SHA256:")
          body_lines.append(open("schemas/merged.tl.sha256","r",encoding="utf-8").read().strip())
          body_lines.append("")
          body_lines.append("See CHANGELOG.txt in repository for unified diffs.")
          open("RELEASE_BODY.txt","w",encoding="utf-8").write("\n".join(body_lines))
          # 输出给后续步骤用
          print(f"::set-output name=tag::{tag}")
          print(f"::set-output name=title::{title}")
          PY
        shell: bash

      - name: Create GitHub Release (if changed)
        if: steps.diff.outputs.changed == 'true'
        id: gh_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ github.token }}          # 显式传 token 更稳
          tag_name: ${{ steps.compose.outputs.tag }}
          name: ${{ steps.compose.outputs.title }}
          body_path: RELEASE_BODY.txt
          generate_release_notes: false
          make_latest: true
          files: |
            schemas/merged.tl
            schemas/merged.tl.sha256

      - name: Show release url
        if: steps.diff.outputs.changed == 'true'
        run: |
          echo "Release created. Check the Releases tab."
          # softprops 会把 HTML URL 打印在日志里；这里额外把 tag 打印出来
          echo "Tag: ${{ steps.compose.outputs.tag }}"

      - name: Upload artifacts (if changed)
        if: steps.diff.outputs.changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: schemas
          path: |
            schemas/merged.tl
            schemas/merged.tl.sha256
            schemas/latest.tl
            schemas/CHANGELOG.txt
            schemas/metadata.json
